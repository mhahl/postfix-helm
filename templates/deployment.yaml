apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: postfix
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.postfix.autoscaling.enabled }}
  replicas: {{ .Values.postfix.replicaCount }}
  {{- end }}
  {{- if .Values.postfix.updateStrategy }}
  strategy: {{- toYaml .Values.postfix.updateStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: postfix
  template:
    metadata:
      {{- if .Values.postfix.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.postfix.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: postfix
        {{- if .Values.postfix.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.postfix.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "postfix.serviceAccountName" . }}
      {{- include "postfix.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.postfix.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.postfix.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.postfix.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.postfix.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.postfix.podAffinityPreset "component" "postfix" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.postfix.podAntiAffinityPreset "component" "postfix" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.postfix.nodeAffinityPreset.type "key" .Values.postfix.nodeAffinityPreset.key "values" .Values.postfix.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.postfix.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.postfix.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.postfix.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.postfix.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.postfix.priorityClassName }}
      priorityClassName: {{ .Values.postfix.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.postfix.schedulerName }}
      schedulerName: {{ .Values.postfix.schedulerName | quote }}
      {{- end }}
      {{- if .Values.postfix.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.postfix.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.postfix.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.postfix.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.postfix.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.postfix.terminationGracePeriodSeconds }}
      {{- end }}
      initContainers:
        {{- if and .Values.volumePermissions.enabled .Values.persistence.enabled }}
        - name: volume-permissions
          image: {{ include "postfix.volumePermissions.image" . }}
          imagePullPolicy: {{ .Values.volumePermissions.image.pullPolicy | quote }}
          command:
            - /usr/bin/true
          securityContext: {{- include "common.tplvalues.render" (dict "value" .Values.volumePermissions.containerSecurityContext "context" $) | nindent 12 }}
          {{- if .Values.volumePermissions.resources }}
          resources: {{- toYaml .Values.volumePermissions.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: postfix
              mountPath: {{ .Values.persistence.mountPath }}
              {{- if .Values.persisteance.subPath }}
              subPath: {{ .Values.persistence.subPath }}
              {{- end }}
        {{- end }}
        {{- if .Values.postfix.initContainers }}
          {{- include "common.tplvalues.render" (dict "value" .Values.postfix.initContainers "context" $) | nindent 8 }}
        {{- end }}
      containers:
        - name: postfix
          image: {{ template "postfix.image" . }}
          imagePullPolicy: {{ .Values.postfix.image.pullPolicy }}
          {{- if .Values.postfix.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.postfix.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
          {{- else if .Values.postfix.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.postfix.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else if .Values.postfix.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.postfix.args "context" $) | nindent 12 }}
          {{- end }}
          env:
            - name: __TODO__
              value: bar
            {{- if .Values.postfix.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.postfix.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.postfix.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.postfix.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.postfix.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.postfix.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- if .Values.postfix.resources }}
          resources: {{- toYaml .Values.postfix.resources | nindent 12 }}
          {{- end }}
          ports:
            - name: smtp
              containerPort: {{ .Values.postfix.containerPorts.smtp }}
            - name: submission
              containerPort: {{ .Values.postfix.containerPorts.submission }}
          {{- if not .Values.diagnosticMode.enabled }}
          {{- if .Values.postfix.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.postfix.customLivenessProbe "context" $) | nindent 12 }}
          {{- else if .Values.postfix.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.postfix.livenessProbe "enabled") "context" $) | nindent 12 }}
            exec:
              command:
                - /bin/true
          {{- end }}
          {{- if .Values.postfix.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.postfix.customReadinessProbe "context" $) | nindent 12 }}
          {{- else if .Values.postfix.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.postfix.readinessProbe "enabled") "context" $) | nindent 12 }}
            exec:
              command:
                - /bin/true
          {{- end }}
          {{- if .Values.postfix.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.postfix.customStartupProbe "context" $) | nindent 12 }}
          {{- else if .Values.postfix.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.postfix.startupProbe "enabled") "context" $) | nindent 12 }}
            exec:
              command:
                - /bin/true
          {{- end }}
          {{- end }}
          {{- if .Values.postfix.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.postfix.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: postfix
              mountPath: {{ .Values.persistence.mountPath }}
              {{- if .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
              {{- end }}
          {{- if .Values.postfix.extraVolumeMounts }}
          {{- include "common.tplvalues.render" (dict "value" .Values.postfix.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
        {{- if .Values.postfix.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.postfix.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        - name: postfix
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ default (include "common.names.fullname" .) .Values.persistence.existingClaim }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        {{- if .Values.postfix.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.postfix.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
